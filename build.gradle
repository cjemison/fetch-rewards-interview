plugins {
    id 'org.springframework.boot' version '2.1.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'com.cjemison.fetchrewards'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "http://repo.spring.io/libs-release" }
    maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.3'
    implementation group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
    implementation group: 'com.google.guava', name: 'guava', version: '27.1-jre'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation "io.micrometer:micrometer-registry-prometheus:1.2.0"

    implementation 'io.springfox:springfox-swagger2:3.0.0-SNAPSHOT'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0-SNAPSHOT'
    implementation 'io.springfox:springfox-spring-webflux:3.0.0-SNAPSHOT'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

test {
    environment "spring.profiles.active", "test"
    testLogging {
        events "passed", "skipped", "failed"
    }
    finalizedBy(jacocoTestReport, jacocoTestCoverageVerification)
}

clean {
    delete "build"
    delete "out"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.95
            }
        }

        rule {
            enabled = false
            element = 'CLASS'
            includes = ['com.cjemison.fetchrewards.*']
            excludes = ['com.cjemison.fetchrewards.config.*',
                        'com.cjemison.fetchrewards.util.*',
                        'com.cjemison.fetchrewards.App.class']


            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.95
            }
        }
    }
}

bootJar {
    archiveName = "app.jar"
    from sourceSets.main.allSource
}